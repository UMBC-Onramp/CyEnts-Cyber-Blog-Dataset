
Because of the noted indications that IRONGATE is a proof of concept, we cannot conclude IRONGATEâ€™s author intends to manipulate specific temperature or pressure values associated with the specific biogas.exe process, but find the similarities to this example code striking.
Artifacts and Indicators PyInstaller Artifacts
The IRONGATE droppers are Python scripts converted to executables using PyInstaller.
The compiled droppers contain PyInstaller artifacts from the system the executables were created on.
These artifacts may link other samples compiled on the same system.
Five of the six file droppers ( bla.exe, update.exe 1 , update_no_pipe.exe 1 , update_no_pipe.exe 2 and update.exe 3 ) all share the same PyInstaller artifacts listed in Table 1.
Table 1:
Pyinstaller Artifacts The remaining dropper, update.exe 2 , contains the artifacts listed in Table 2.
Table 2:
Pyinstaller Artifacts for update.exe 2 Unique Strings Figure 1 and 2 list the unique strings discovered in the scada.exe and Step7ProSim.dll binaries.
Figure 1: Scada.exe Unique Strings Figure 2:
Step7ProSim.dll Unique Strings File Hashes Table 3 contains the MD5 hashes, file and architecture type, and compile times for the malware analyzed in this report.
Table 3:
File MD5 Hashes and Compile Times FireEye detects IRONGATE.
A list of indicators can be found here .
Special thanks to the Siemens ProductCERT for providing support and context to this investigation.
Subscribe to Blogs Get email updates as new blog posts are added.


