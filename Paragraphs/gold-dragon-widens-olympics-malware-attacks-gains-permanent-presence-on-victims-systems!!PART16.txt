
Gold Dragon sample.
Ghost419 sample.
Numerous other similarities are present in addition to system reconnaissance methods; the communication mechanism uses the same user agent string as Gold Dragon.
Gold Dragon user agent string.
Ghost419 user agent string.
RunningRat RunningRat is a remote access Trojan (RAT) that operates with two DLLs.
It gets its name from a hardcoded string embedded in the malware.
Upon being dropped onto a system, the first DLL executes.
This DLL serves three main functions: killing antimalware, unpacking and executing the main RAT DLL, and obtaining persistence.
The malware drops the Windows batch file dx.bat, which attempts to kill the task daumcleaner.exe; a Korean security program.
The batch file then attempts to remove itself.
The first DLL unpacks a resource file attached to the DLL using a zlib decompression algorithm.
The authors of the malware left the debugging strings in the binary, making the algorithm easy to identify.
The second DLL is decompressed in memory and never touches the user’s file system; this file is the main RAT that executes.
Finally, the first DLL adds the registry key “SysRat,” at SoftWare\\Microsoft\\Windows\\CurrentVersion\\Run, to ensure the malware is executed at startup.
After the second DLL is loaded into memory, the first DLL overwrites the IP address for the control server, effectively changing the address the malware will communicate with.
This address is hardcoded in the second DLL as 200.200.200.13 and is modified by the first DLL to 223.194.70.136.
This type of behavior may indicate this code is being reused or is part of a malware kit.
The first DLL uses one common antidebugging technique by checking for SeDebugPrivilege.