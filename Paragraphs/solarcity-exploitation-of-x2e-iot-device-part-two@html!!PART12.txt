
Once we confirmed our changes were stable, we saved the configuration to flash and could access the bootloader without performing the aforementioned glitch attack.
Accessing Linux as root User Now that we have unrestricted access to the bootloader, we can finally influence the rest of the boot process and achieve a privileged shell.
We alluded to this in Part One, but the easiest way to turn an unlocked U-Boot shell into a root Linux shell is to adjust the boot arguments that U-Boot passes to the Linux kernel.
In our case, this was accomplished by using the setenv utility to change the std_bootarg environment variable to be init=/bin/
sh and instructing U-Boot to resume the standard boot process.
Figure 8 shows the Linux shell presented over UART.