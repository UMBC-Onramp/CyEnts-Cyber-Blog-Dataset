
The overflow in the PAM library also causes the SSH server to crash, as shown in Figure 3.
The operating system writes a crash dump to /core if the SSH server crashes with no debugger attached.
In fact, if a /core file exists on a Solaris machine and the file command reports that it is from sshd , those are indicators consistent with this vulnerability having been exploited.
Figure 3:
The SSH server crashes in the parse_user_name function Vulnerable Operating Systems Solaris 9 (some releases)
Solaris 10 (all releases) Solaris 11.0
While the parse_user_name function remains vulnerable in unpatched Solaris 11.1 and later, unrelated changes to the PAM library truncate the username before the vulnerable function receives it, rendering the issue non-exploitable via SSH.
If the parse_user_name function were reachable in another context, then the vulnerability could become exploitable.
Illumos (OpenIndiana 2020.04) Mitigations and Workaround A patch from Oracle for Solaris 10 and 11 is described in the October 2020 Critical Patch Update .
Because Solaris 9 is no longer supported, Oracle has not released a patch.
For Solaris 9, as well as Solaris 10 or 11 systems where patching is inconvenient, we recommend editing the /etc
/ssh/sshd_config file to add the lines
ChallengeResponseAuthentication
no
and KbdInteractiveAuthentication no
and restart the SSH server.
While this removes the opportunity to exploit the vulnerability using SSH Keyboard-Interactive authentication, there may be other ways to attack the parse_user_name function and we recommend using this workaround only as a stopgap until Solaris 9 systems can be upgraded, or the October patch can be accessed and installed for supported Solaris versions.
Acknowledgements Jeffrey Martin of Rapid7 contributed to the testing of this vulnerability.
Subscribe to Blogs Get email updates as new blog posts are added.


