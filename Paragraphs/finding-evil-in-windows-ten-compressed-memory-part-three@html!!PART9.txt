
Using flare-emuâ€™s iterate function, I force emulation to reach decompression, at which point I read the first item on the stack and then search for it within my known pattern.
Techniques like the one described above are ultimately used to retrieve all structure fields involved in the page decompression and can be leveraged in other situations in which an undocumented structure may need tracking across Windows builds.
Figure 5 shows the automation utility extracting the fields of the undocumented structures used by the Volatility and Rekall plugins.
Figure 5:
Output of automation from within IDA Pro Keeping Volatility and Rekall Updated The data generated by the automation script is primarily useful when implemented in Volatility and Rekall.
In both Volatility and Rekall, the win10_memcompression.py overlay contains all structure definitions needed for page location and decompression.