
Launches a new suspended process using CreateProcessA (to host the shellcode) Allocates some memory with VirtualAllocEx() with an EXECUTE_READWRITE privilege Writes the shellcode in the targetâ€™s process memory with WriteProcessMemory() Creates a new thread to execute the shellcode using CreateRemoteThread() Conclusion Fileless malware takes advantage of the trust factor between security software and genuine, signed Windows applications.
Because this type of attack is launched through reputable, trusted executables, these attacks are hard to detect.
McAfee Endpoint Security (ENS) and Host Intrusion Prevention System (HIPS) customers are protected from this class of fileless attack through Signature ID 6118.
Acknowledgements The author thanks the following colleagues for their help with this analysis: Abhishek Karnik Deepak Setty Oliver Devane Shruti Suman References https://ruxcon.org.au/assets/2017/slides/NET-Interop-Full.pdf https://github.com/tyranid/DotNetToJScript https://github.com/mdsecactivebreach/cactustorch MITRE ATT&CK techniques Drive-by compromise Scripting using Windows Script Host Decode information Command-line interface Process injection Hashes 4CF9863C8D60F7A977E9DBE4DB270819 5EEFBB10D0169D586640DA8C42DD54BE 69A2B582ED453A90CC06345886F03833 74172E8B1F9B7F9DB600C57E07368B8F 86C47B9E0F43150FEFF5968CF4882EBB 89F87F60137E9081F40E7D9AD5FA8DEF 8A33BF71E8740BDDE23425BBC6259D8F 8DCCC9539A499D375A069131F3E06610
924B7FB00E930082CE5B96835FDE69A1 B60E085150D53FCE271CD481435C6E1E BC7923B43D4C83D077153202D84EA603 C1A7315FB68043277EE57BDBD2950503 D2095F2C1D8C25AF2C2C7AF7F4DD4908 D5A07C27A8BBCCD0234C81D7B1843FD4 E0573E624953A403A2335EEC7FFB1D83 E1677A25A047097E679676A459C63A42 F0BC5DFD755B7765537B6A934CA6DBDC F6526E6B943A6C17A2CC96DD122B211E CDB73CC7D00A2ABB42A76F7DFABA94E1 D4EB24F9EB1244A5BEAA19CF69434127

