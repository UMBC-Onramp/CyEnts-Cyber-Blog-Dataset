
This in turn lets me do more on-the-fly experimentation, one-off string decodes, or validation of hypotheses before attacking something at scale.
It also allows me to experiment dynamically with samples that won’t load correctly anyway, such as unpacked code with damaged or incorrect PE headers.
I’ve shared the Code Grafting tools as part of the flare-ida GitHub repository .
To use this for your own analyses: In IDA Pro’s IDAPython prompt, run code_grafter.py or import it as a module.
Instantiate a CodeGrafter object and invoke its graftCodeToIdb() method: CodeGrafter().graftCodeToIdb() Use Bochs in IDB mode to conveniently execute your modified sample and experiment away!
This post makes it clear just how far I’ll go to avoid breaking eye contact with IDA.
If you’re a fan of using Bochs with IDA too, then this is my gift to you.
Enjoy!
Subscribe to Blogs Get email updates as new blog posts are added.


