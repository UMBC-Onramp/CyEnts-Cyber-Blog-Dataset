
When third-party libraries use JS Binding, we recommend using HTTPS for loading content.
Since customers may have different requirements regarding security and privacy, apps with JS-Binding-Over-HTTP vulnerabilities and JS sidedoors can introduce risks to security-sensitive environments such as enterprise networks.
FireEye Mobile Threat Prevention provides protection to our customers from these kinds of security threats.
Acknowledgement We thank our team members Adrian Mettler and Zheng Bu for their help in writing this blog.
Appendix A: JavaScript Code Snippets Served from InMobi Ad Servers a.takeCameraPicture = function () { utilityController.takeCameraPicture() }; a.getGalleryImage = function () { utilityController.getGalleryImage() }; a.makeCall = function (f) { try { utilityController.makeCall(f) } catch (d) { a.showAlert(\"makeCall: \" + d) } }; a.sendMail = function (f, d, b) { try { utilityController.sendMail(f, d, b) } catch (c) { a.showAlert(\"sendMail: \" + c) } }; a.sendSMS = function (f, d) { try { utilityController.sendSMS(f, d) } catch (b) { a.showAlert(\"sendSMS: \" + b) } }; a.postToSocial = function (a, c, b, e) { a = parseInt(a); isNaN(a) && window.mraid.broadcastEvent(\"error\", \"socialType must be an integer\", \"postToSocial\"); \"string\" !
=
typeof c && (c = \"\"); \"string\" !
=
typeof b && (b = \"\"); \"string\" !
=
typeof e && (e = \"\"); utilityController.postToSocial(a, c, b, e) }; a.createCalendarEvent = function (a) { \"object\" !
=
typeof a && window.mraid.broadcastEvent(\"error\", \"createCalendarEvent method expects parameter\", \"createCalendarEvent\"); \"string\" !
=
typeof a.start || \"string\" !
= typeof a.end ?
window.mraid.broadcastEvent(\"error\", \"createCalendarEvent method expects  string parameters for start and end dates\", \"createCalendarEvent\") : (\"string\" !=
typeof a.location && (a.location = \"\"), \"string\" !
=
typeof a.description && (a.description = \"\"), utilityController.createCalendarEvent(a.start, a.end, a.location, a.description)) }; a.registerMicListener=function() { utilityController.registerMicListener() }; Subscribe to Blogs Get email updates as new blog posts are added.


