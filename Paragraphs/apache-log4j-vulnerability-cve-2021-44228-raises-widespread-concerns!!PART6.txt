
Juniper Threat Labs has been seeing some amount of scanning looking for vulnerable servers.
A common method used by attackers is inserting the malicious request in the User-Agent header as most web servers will log this field to identify the browsers connecting to them.
But we have also seen attacks where the malicious requests are injected in different headers such as the ones below: User-Agent: Authorization: CF-Connecting_IP: Client-IP: Contact: Cookie: Forwarded-For-Ip: Forwarded-For: Forwarded: From: Originating-IP: Proxy-Client-IP: Referer: True-Client-IP: X-Api-Version: X-Client-IP: X-Client-Ip: X-Forwarded-For: X-Host: X-Originating-Ip: X-Real-IP: X-Remote-Addr: X-Remote-Ip: X-Wap-Profile:
In addition to the straightforward attacks, we have also seen some connections that attempt to obfuscate the requests such as using {lower: } or {upper:} in the request: Or using an HTTP post command and burying the malicious request in the POST body: This POST form would probably not succeed at exploiting this Log4j vulnerability in most situations because POST body is usually not logged.
Given the port number used (8983), this seems to be targeting Apache SOLR enterprise search platform, which does not log POST bodies.