
When it starts, it sleeps 21 seconds to bypass those sandboxes with a strategy of killing a sample process when a timeout of no-action is triggered.
Twenty one seconds later, the downloader then invokes a function called “Consturctor()”, as you can see in Figure 2.1.
It then invokes another function “Program.
List_Types()”, where it downloads Snake Keylogger module from the link “hxxps[:]//store2[.]gofile[.]io/download/0283e6ba-afc6-4dcb-b2f4-3173d666e2c4/Huzeigtmvaplpinhoo.dll”, which is a RC4 encrypted DLL file.
Next, it calls “ToRc()” function to RC4 decrypt it using a decryption key \"Dllzjn\".
It then proceeds to load the decrypted Dll module (a .Net
Dll file, called “Huzeigtmvaplpinhoo.dll”), and enumerates its export functions to find \"G6doICqoMU()\", which is invoked by executing “type.
InvokeMember(\\\"G6doICqoMU\\\", BindingFlags.
InvokeMethod, null, null, null)” in function Consturctor(), as shown in Figure 2.1.
The decrypted .Net
Dll is a dropper and installer of Snake Keylogger.
Let’s dive into this module to see how it performs its tasks.