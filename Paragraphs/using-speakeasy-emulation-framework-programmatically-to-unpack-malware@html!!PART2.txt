
Figure 1 shows a Python code snippet that sets up such a class that will be expanded in upcoming examples.
import speakeasy class MyUnpacker(speakeasy.
Speakeasy): def __init__(self, config=
None): super(MyUnpacker, self).__init__(config=config)
Figure 1: Creating a Speakeasy subclass The code in Figure 1 accepts a Speakeasy configuration dictionary that may be used to override the default configuration.
Speakeasy ships with several configuration files .
The Speakeasy class is a wrapper class for an underlying emulator class.