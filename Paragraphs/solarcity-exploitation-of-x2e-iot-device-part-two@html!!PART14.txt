
Embedded devices typically only have a handful of users, with a majority of functionality being performed by the root user.
This presents an interesting opportunity for us to abuse overlap between actions performed by the root user on contents owned and controlled by the python user.
By reviewing the boot process, we noted a large number of custom init scripts in the /etc/init.d/ directory.
These scripts are executed at system start by the root user and were responsible for starting daemons and ensuring directories or files exist.
One file in particular, /etc/init.d/S50dropbear.sh , was interesting to us, as it appeared to perform a number of actions on files within the directory specified by the $PYTHON_HOME variable, which was /WEB/python/ , shown in Figure 9.
Figure 9: Unsafe operations on $PYTHON_HOME directory
At first glance this may seem benign but considering that the /WEB/python/ directory is controllable by the python user, it means that we can potentially control actions taken by root .
More specifically, the chown operation is dangerous, as the previous mkdir command can fail silently and result in an unsafe chown operation.