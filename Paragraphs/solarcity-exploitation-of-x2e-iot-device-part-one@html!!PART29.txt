
These credentials could be used to access the web interface and SSH, shown in Figure 19.
Mandiant confirmed different passwords were used for different versions and connectivity states.
Mandiant reported this to SolarCity and was assigned the CVE number CVE-2020-9306.
Figure 19: Hardcoded credentials in password_manager.pyc With the correct password, we were finally able to connect to the web and SSH ports on a running X2e, but unfortunately only as the less-privileged python system user.
While this was a great start, it didnâ€™t satisfy our final objective, which was to remotely compromise the X2e as a privileged user.
In Part Two of this blog series, we will explore additional avenues to further compromise the X2e.
Conclusion
In Part One of this two-part blog series, we covered an overview of the X2e, our initial network-based reconnaissance, PCB inspection techniques, physical debugging interface probing, chip-off techniques, and firmware analysis.
Using these methodologies, we were successfully able to remotely compromise the X2e device as a non-administrative user due to hardcoded credentials (CVE-2020-9306).
In Part Two, we will re-investigate physical attacks against the X2e in the form of glitch attacks, re-explore the U-Boot bootloader, and finally demonstrate an attack to remotely compromise the X2e device as a privileged user.
To continue reading, check out Part Two now .
Subscribe to Blogs Get email updates as new blog posts are added.


