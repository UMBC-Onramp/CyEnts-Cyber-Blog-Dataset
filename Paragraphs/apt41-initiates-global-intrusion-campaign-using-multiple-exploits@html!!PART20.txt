
import \"pe\" rule ExportEngine_APT41_Loader_String { meta: author = \"@stvemillertime\" description \"This looks for a common APT41 Export DLL name in BEACON shellcode loaders, such as loader_X86_svchost.dll\" strings: $pcre = /loader_[\\x00-\\x7F]{1,}\\x00/
condition: uint16(0) ==
0x5A4D and uint32(uint32(0x3C))
=
=
0x00004550 and $pcre at pe.rva_to_offset(uint32(pe.rva_to_offset(pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_EXPORT].virtual_address) + 12)) } rule ExportEngine_ShortName { meta: author = \"@stvemillertime\" description =
\"This looks for Win PEs where Export DLL name is a single character\" strings: $pcre = /[A-Za-z0-9]{1}\\.(dll|exe|dat|bin|sys)/ condition: uint16(0) ==
0x5A4D and uint32(uint32(0x3C))
=
=
0x00004550 and $pcre at pe.rva_to_offset(uint32(pe.rva_to_offset(pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_EXPORT].virtual_address) + 12)) } rule ExportEngine_xArch { meta: author = \"@stvemillertime\" description =
\"This looks for Win PEs where Export DLL name is a something like x32.dat\" strings: $pcre = /[\\x00-\\x7F]{1,}x(32|64|86)\\.dat\\x00/
condition: uint16(0) ==
0x5A4D and uint32(uint32(0x3C))
=
=
0x00004550 and $pcre at pe.rva_to_offset(uint32(pe.rva_to_offset(pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_EXPORT].virtual_address) + 12)) } rule RareEquities_LibTomCrypt { meta: author = \"@stvemillertime\" description =
\"This looks for executables with strings from LibTomCrypt as seen by some APT41-esque actors https://github.com/libtom/libtomcrypt - might catch everything BEACON as well.
You may want to exclude Golang and UPX packed samples.\" strings: $a1 = \"LibTomMath\" condition: uint16(0) ==