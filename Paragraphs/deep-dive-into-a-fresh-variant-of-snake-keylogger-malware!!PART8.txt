
This ensures that Snake Keylogger will be started by the Windows system every time it starts.
2.
Extraction from Resource Although the content of Huzeigtmvaplpinhoo.dll only appears in memory, to analyze it I saved it into a local file.
It has several resources in the Resource directory, as shown below in Figure 3.3.
The process of extracting the payload file of Snake Keylogger is a little complicated.
It uses a tricky way to load the resource.
It has a local callback function defined by ResolveEventHandler that is registered to AppDomain.
ResourceResolve, which is then called when it fails to load a resource by name.
It looks like an exception handler to Windows SEH strategy to handle exceptions.
In addition, it has another local callback function registered to AppDomain.
AssemblyResolve, which is called when it fails to load an assembly (like a module) by name.
Below is a pseudocode of registering a local resource resolve, where T9wOjU5ccxTJaVfUntn.
Osc50oil0l is the local callback function.
AppDomain.
ResourceResolve += new ResolveEventHandler(T9wOjU5ccxTJaVfUntn.
Osc50oil0l)
Now, let’s see how Snake Keylogger solves this challenge—loading a nonexistent resource, which will trigger the resource loading failure.