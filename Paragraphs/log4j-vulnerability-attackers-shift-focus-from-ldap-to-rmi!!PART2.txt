
Since then, we’ve begun to see some threat actors shift towards using the Remote Method Invocation (RMI) API.
In this post, we will describe one such attack and will discuss in detail how the attack vector leads to RCE (Remote Code Execution).
RMI is a mechanism that allows an object residing in one Java Virtual Machine (JVM) to access or invoke an object running on another JVM.
To facilitate this interaction, the local JVM may require Java bytecode related to the remote object.
This code is downloaded from a specified remote URL and loaded into the local JVM.
RMI operations are subject to additional checks and constraints by a Java security manager .
However, as discussed in a 2016 Black Hat presentation , some JVM versions do not apply the same restrictions and policies to JNDI.
In the present attack, the caller is running a vulnerable version of Log4j and the attacker’s server is running RMI.
Below is a diagram showing how the attack unfolds.
From here, we will describe each step in detail.