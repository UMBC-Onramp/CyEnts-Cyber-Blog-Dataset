
Once this address is overwritten, the function attempts to write the next byte at the new value, in this case is an invalid address.
This overflow gives an attacker two exploitable vectors: a write-what-where condition allows an attacker to write data to an arbitrary location in memory; by continuing to overwrite data on the stack, an attacker can overwrite the $RA register or return address for the calling function, providing the attacker control of the execution flow.
Writing the exploit Now that that we understand the vulnerability, can we exploit it?
Because this is a standard buffer overflow, we need to answer two questions.