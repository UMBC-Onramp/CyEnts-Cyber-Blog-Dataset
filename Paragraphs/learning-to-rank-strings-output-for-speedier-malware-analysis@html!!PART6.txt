
However, solving the task of automatically ranking strings is not trivial.
The space of relevant strings is unstructured and vast, and devising finely tuned rules to robustly account for all the possible variations among them would be a tall order.
Learning to Rank Strings Output This task can instead be formulated in a machine learning (ML) framework called learning to rank (LTR) , which has been historically applied to problems like information retrieval, machine translation, web search, and collaborative filtering.
One way to tackle LTR problems is by using Gradient Boosted Decision Trees (GBDTs) .
GBDTs successively learn individual decision trees that reduce the loss using a gradient descent procedure, and ultimately use a weighted sum of every trees’ prediction as an ensemble.
GBDTs with an LTR objective function can learn class probabilities to compute each string’s expected relevance, which can then be used to rank a given Strings output.