
JFFS2 is a common filesystem used in embedded devices; Unsorted Block Image File System (UBIFS) and SquashFS would also be common.
At first glance, the output appears to be promising; however, it is highly unlikely that there are actually that many JFFS2 filesystems present on our NAND.
Another indication that something isn’t quite right are the hexadecimal offsets – they don’t appear to be clean, uniform offsets.
It is far more common that the offsets of the items identified by binwalk would align with NAND page offsets, which are a multiple of 2048.
In order to understand what is occurring here, we need to revisit a characteristic of unmanaged (or “raw”)
NAND ICs described in the NAND Overview section.
To recap, raw NAND requires additional bytes per page for use by higher-level components to attest to the validity of the page, typically implemented as a defined “bad block” marker and a per-page (or subpage) Error-Correcting Code (ECC).
Without going too deep into ECC fundamentals, ECC provides the ability for higher-level processes to detect n number of bad bits on a page and to correct m number of bits.